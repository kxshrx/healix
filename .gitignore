# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to keep this gitignore file in the project directory
#  https://www.jetbrains.com/pycharm/
.idea/

# VSCode
.vscode/
*.code-workspace

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Healthcare Data Project Specific (Healix)
# ==========================================

# Database files and outputs
*.sqlite
*.db
*.sqlite3
db/claims_db.sqlite
db/*_report.txt

# Keep structure but ignore sensitive data
# outputs/ folder structure is kept for reference
outputs/cleaned/
outputs/processed/
outputs/eda/
outputs/*/

# Data files (keep original healthcare_dataset.csv for reference)
data/processed/
data/interim/
*.csv.bak
*.xlsx.bak

# Keep insurance provider data structure but ignore sensitive details
insurance_providers/sensitive/
insurance_providers/*_sensitive*

# Large data files and models
*.parquet
*.feather
*.h5
*.hdf5
models/
*.pkl
*.pickle
*.joblib
*.model

# Jupyter Notebook outputs and checkpoints
.ipynb_checkpoints/
*/.ipynb_checkpoints/
*.ipynb.bak

# Generated reports and visualizations
reports/
figures/
plots/
# Keep specific EDA plots for reference, ignore others
!outputs/eda/*.png
!outputs/eda/*.csv
*.png
*.jpg
*.jpeg
*.svg
*.pdf

# Logs and temporary processing files
logs/
*.log
scrubbing_logs/
processing_logs/

# Temporary files
temp/
tmp/
*.tmp
*.temp
*_temp*
*_tmp*

# Configuration files with sensitive data
config/secrets.yml
config/database.yml
.env.local
.env.production
connection_strings.*

# Patient data and PHI (HIPAA compliance)
# Keep anonymized/synthetic data, ignore real patient data
patient_data/
phi_data/
*_phi_*
*_patient_identifiable*
*_real_patient*

# Database connection and credential files
*.connection
*.credentials
db_config.*
database_urls.*

# Backup files
backup/
*.backup
*~
*.bak

# Analysis scratch files
scratch/
testing/
sandbox/

# Large compressed files
*.zip
*.tar.gz
*.rar
*.7z

# Documentation builds
docs/build/
site/

# Healthcare specific formats
*.hl7
*.dicom
*.dcm
*.cda

# Performance and profiling outputs
profile_*.txt
benchmark_*.csv
performance_*.log
